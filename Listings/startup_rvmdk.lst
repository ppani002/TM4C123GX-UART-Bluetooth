


ARM Macro Assembler    Page 1 


    1 00000000         ; <<< Use Configuration Wizard in Context Menu >>>
    2 00000000         ;*******************************************************
                       ***********************
    3 00000000         ;
    4 00000000         ; startup_rvmdk.S - Startup code for use with Keil's uVi
                       sion.
    5 00000000         ;
    6 00000000         ; Copyright (c) 2012-2017 Texas Instruments Incorporated
                       .  All rights reserved.
    7 00000000         ; Software License Agreement
    8 00000000         ; 
    9 00000000         ; Texas Instruments (TI) is supplying this software for 
                       use solely and
   10 00000000         ; exclusively on TI's microcontroller products. The soft
                       ware is owned by
   11 00000000         ; TI and/or its suppliers, and is protected under applic
                       able copyright
   12 00000000         ; laws. You may not combine this software with "viral" o
                       pen-source
   13 00000000         ; software in order to form a larger program.
   14 00000000         ; 
   15 00000000         ; THIS SOFTWARE IS PROVIDED "AS IS" AND WITH ALL FAULTS.
                       
   16 00000000         ; NO WARRANTIES, WHETHER EXPRESS, IMPLIED OR STATUTORY, 
                       INCLUDING, BUT
   17 00000000         ; NOT LIMITED TO, IMPLIED WARRANTIES OF MERCHANTABILITY 
                       AND FITNESS FOR
   18 00000000         ; A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE. TI SHALL 
                       NOT, UNDER ANY
   19 00000000         ; CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL, OR C
                       ONSEQUENTIAL
   20 00000000         ; DAMAGES, FOR ANY REASON WHATSOEVER.
   21 00000000         ; 
   22 00000000         ; This is part of revision 2.1.4.178 of the EK-TM4C123GX
                       L Firmware Package.
   23 00000000         ;
   24 00000000         ;*******************************************************
                       ***********************
   25 00000000         
   26 00000000         ;*******************************************************
                       ***********************
   27 00000000         ;
   28 00000000         ; <o> Stack Size (in Bytes) <0x0-0xFFFFFFFF:8>
   29 00000000         ;
   30 00000000         ;*******************************************************
                       ***********************
   31 00000000 00000200 
                       Stack   EQU              0x00000200
   32 00000000         
   33 00000000         ;*******************************************************
                       ***********************
   34 00000000         ;
   35 00000000         ; <o> Heap Size (in Bytes) <0x0-0xFFFFFFFF:8>
   36 00000000         ;
   37 00000000         ;*******************************************************
                       ***********************
   38 00000000 00000000 
                       Heap    EQU              0x00000000
   39 00000000         



ARM Macro Assembler    Page 2 


   40 00000000         ;*******************************************************
                       ***********************
   41 00000000         ;
   42 00000000         ; Allocate space for the stack.
   43 00000000         ;
   44 00000000         ;*******************************************************
                       ***********************
   45 00000000         
   46 00000000         ;includes constants I define to startup file
   47 00000000                 INCLUDE          my_Constants.s
    1 00000000                 AREA             My_Constants, CODE, READONLY
    2 00000000                 THUMB
    3 00000000         
    4 00000000         ;defining addresses here for practice
    5 00000000         
    6 00000000         ;general base addresses
    7 00000000 40059000 
                       AHB_PORTB
                               EQU              0x40059000
    8 00000000 40058000 
                       AHB_PORTA
                               EQU              0x40058000
    9 00000000 400FE000 
                       SYS_CONTROL
                               EQU              0x400FE000
   10 00000000 E000E000 
                       SYS_PERIPH
                               EQU              0xE000E000
   11 00000000 40030000 
                       TIMER16_0
                               EQU              0x40030000
   12 00000000 40034000 
                       TIMER16_4
                               EQU              0x40034000
   13 00000000 4000C000 
                       UART0   EQU              0x4000C000
   14 00000000         
   15 00000000         ;offsets
   16 00000000         ;RCGC Run-time offsets
   17 00000000 00000608 
                       RCGCGPIO
                               EQU              0x608
   18 00000000 00000604 
                       RCGCTIMER
                               EQU              0x604
   19 00000000 00000618 
                       RCGCUART
                               EQU              0x618
   20 00000000         ;GPIO offsets
   21 00000000 0000006C 
                       GPIOHBCTL
                               EQU              0x06C
   22 00000000 0000052C 
                       GPIOCTL EQU              0x52C
   23 00000000 00000400 
                       GPIODIR EQU              0X400
   24 00000000 00000420 
                       GPIOAFSEL
                               EQU              0X420



ARM Macro Assembler    Page 3 


   25 00000000 00000500 
                       GPIODR2R
                               EQU              0X500
   26 00000000 00000510 
                       GPIOPUR EQU              0X510
   27 00000000 0000051C 
                       GPIODEN EQU              0X51C
   28 00000000 0000052C 
                       GPIOPCTL
                               EQU              0x52C
   29 00000000 000003FC 
                       GPIODATAPB5
                               EQU              0x3FC       ;0X080
   30 00000000         ;SysTick offsets
   31 00000000 00000010 
                       STCTRL  EQU              0X010
   32 00000000 00000014 
                       STRELOAD
                               EQU              0X014
   33 00000000 00000018 
                       STCURRENT
                               EQU              0X018
   34 00000000 00000D20 
                       SYSPRI3 EQU              0XD20
   35 00000000         ;NVIC offsets
   36 00000000 00000100 
                       NVIC_ENn
                               EQU              0x100
   37 00000000 00000180 
                       NVIC_DISn
                               EQU              0x180
   38 00000000 00000440 
                       NVIC_PRIn
                               EQU              0x440
   39 00000000         ;Timer offsets
   40 00000000 0000000C 
                       GPTMCTL EQU              0x00C
   41 00000000 00000000 
                       GPTMCFG EQU              0x000
   42 00000000 00000004 
                       GPTMTAMR
                               EQU              0x004
   43 00000000 00000008 
                       GPTMTBMR
                               EQU              0x008
   44 00000000 00000028 
                       GPTMTAILR
                               EQU              0x028
   45 00000000 0000002C 
                       GPTMTBILR
                               EQU              0x02C
   46 00000000 00000038 
                       GPTMTAPR
                               EQU              0x038
   47 00000000 0000003C 
                       GPTMTBPR
                               EQU              0x03C
   48 00000000 00000018 
                       GPTMIMR EQU              0x018



ARM Macro Assembler    Page 4 


   49 00000000 0000001C 
                       GPTMRIS EQU              0x01C
   50 00000000 00000024 
                       GPTMICR EQU              0x024
   51 00000000 00000050 
                       GPTMTAV EQU              0X050
   52 00000000 00000054 
                       GPTMTBV EQU              0x054
   53 00000000 00000048 
                       GPTMTAR EQU              0x048
   54 00000000 0000004C 
                       GPTMTBR EQU              0x04C
   55 00000000 00000020 
                       GPTMMIS EQU              0x020
   56 00000000         ;UART offsets
   57 00000000 00000FC8 
                       UARTCC  EQU              0xFC8
   58 00000000 00000030 
                       UARTCTL EQU              0x030
   59 00000000 00000024 
                       UARTIBRD
                               EQU              0x024
   60 00000000 00000028 
                       UARTFBRD
                               EQU              0x028
   61 00000000 0000002C 
                       UARTLCRH
                               EQU              0x02C
   62 00000000 00000018 
                       UARTFR  EQU              0x018
   63 00000000 00000004 
                       UARTRSR EQU              0x004
   64 00000000 00000034 
                       UARTIFLS
                               EQU              0x034
   65 00000000 0000003C 
                       UARTRIS EQU              0x03C
   66 00000000 00000038 
                       UARTIM  EQU              0x038
   67 00000000 00000040 
                       UARTMIS EQU              0x040
   68 00000000 00000044 
                       UARTICR EQU              0x044
   69 00000000 00000000 
                       UARTDR  EQU              0x000
   70 00000000         
   71 00000000         ;FIFO constants
   72 00000000                 ALIGN            2
   73 00000000 10 00   SIZE    DCW              16
   74 00000002 01 00   SUCCESS DCW              1
   75 00000004 00 00   FAIL    DCW              0
   76 00000006         
   77 00000006                 END
   48 00000006         ;Include variables I define to startup file
   49 00000006         ;INCLUDE my_Variables.s
   50 00000006                 IMPORT           PB5_MASK
   51 00000006         
   52 00000006                 AREA             STACK, NOINIT, READWRITE, ALIGN
=3



ARM Macro Assembler    Page 5 


   53 00000000         StackMem
   54 00000000                 SPACE            Stack
   55 00000200         __initial_sp
   56 00000200         
   57 00000200         ;*******************************************************
                       ***********************
   58 00000200         ;
   59 00000200         ; Allocate space for the heap.
   60 00000200         ;
   61 00000200         ;*******************************************************
                       ***********************
   62 00000200                 AREA             HEAP, NOINIT, READWRITE, ALIGN=
3
   63 00000000         __heap_base
   64 00000000         HeapMem
   65 00000000                 SPACE            Heap
   66 00000000         __heap_limit
   67 00000000         
   68 00000000         ;*******************************************************
                       ***********************
   69 00000000         ;
   70 00000000         ; Indicate that the code in this file preserves 8-byte a
                       lignment of the stack.
   71 00000000         ;
   72 00000000         ;*******************************************************
                       ***********************
   73 00000000                 PRESERVE8
   74 00000000         
   75 00000000         ;*******************************************************
                       ***********************
   76 00000000         ;
   77 00000000         ; Place code into the reset code section.
   78 00000000         ;
   79 00000000         ;*******************************************************
                       ***********************
   80 00000000                 AREA             RESET, CODE, READONLY
   81 00000000                 THUMB
   82 00000000         
   83 00000000         ;*******************************************************
                       ***********************
   84 00000000         ;
   85 00000000         ; The vector table.
   86 00000000         ;
   87 00000000         ;*******************************************************
                       ***********************
   88 00000000                 EXPORT           __Vectors
   89 00000000         __Vectors
   90 00000000 00000200        DCD              StackMem + Stack ; Top of Stack
                                                            
   91 00000004 00000000        DCD              Reset_Handler ; Reset Handler
   92 00000008 00000000        DCD              NmiSR       ; NMI Handler
   93 0000000C 00000000        DCD              FaultISR    ; Hard Fault Handle
                                                            r
   94 00000010 00000000        DCD              IntDefaultHandler ; The MPU fau
                                                            lt handler
   95 00000014 00000000        DCD              IntDefaultHandler ; The bus fau
                                                            lt handler
   96 00000018 00000000        DCD              IntDefaultHandler ; The usage f
                                                            ault handler



ARM Macro Assembler    Page 6 


   97 0000001C 00000000        DCD              0           ; Reserved
   98 00000020 00000000        DCD              0           ; Reserved
   99 00000024 00000000        DCD              0           ; Reserved
  100 00000028 00000000        DCD              0           ; Reserved
  101 0000002C 00000000        DCD              IntDefaultHandler 
                                                            ; SVCall handler
  102 00000030 00000000        DCD              IntDefaultHandler ; Debug monit
                                                            or handler
  103 00000034 00000000        DCD              0           ; Reserved
  104 00000038 00000000        DCD              IntDefaultHandler ; The PendSV 
                                                            handler
  105 0000003C 00000000        DCD              SysTick_Handler ; The SysTick h
                                                            andler
  106 00000040 00000000        DCD              IntDefaultHandler ; GPIO Port A
                                                            
  107 00000044 00000000        DCD              IntDefaultHandler ; GPIO Port B
                                                            
  108 00000048 00000000        DCD              IntDefaultHandler ; GPIO Port C
                                                            
  109 0000004C 00000000        DCD              IntDefaultHandler ; GPIO Port D
                                                            
  110 00000050 00000000        DCD              IntDefaultHandler ; GPIO Port E
                                                            
  111 00000054 00000000        DCD              IntDefaultHandler 
                                                            ; UART0 Rx and Tx
  112 00000058 00000000        DCD              IntDefaultHandler 
                                                            ; UART1 Rx and Tx
  113 0000005C 00000000        DCD              IntDefaultHandler 
                                                            ; SSI0 Rx and Tx
  114 00000060 00000000        DCD              IntDefaultHandler ; I2C0 Master
                                                             and Slave
  115 00000064 00000000        DCD              IntDefaultHandler ; PWM Fault
  116 00000068 00000000        DCD              IntDefaultHandler 
                                                            ; PWM Generator 0
  117 0000006C 00000000        DCD              IntDefaultHandler 
                                                            ; PWM Generator 1
  118 00000070 00000000        DCD              IntDefaultHandler 
                                                            ; PWM Generator 2
  119 00000074 00000000        DCD              IntDefaultHandler ; Quadrature 
                                                            Encoder 0
  120 00000078 00000000        DCD              IntDefaultHandler 
                                                            ; ADC Sequence 0
  121 0000007C 00000000        DCD              IntDefaultHandler 
                                                            ; ADC Sequence 1
  122 00000080 00000000        DCD              IntDefaultHandler 
                                                            ; ADC Sequence 2
  123 00000084 00000000        DCD              IntDefaultHandler 
                                                            ; ADC Sequence 3
  124 00000088 00000000        DCD              IntDefaultHandler 
                                                            ; Watchdog timer
  125 0000008C 00000000        DCD              Timer0A_Handler ; Timer 0 subti
                                                            mer A
  126 00000090 00000000        DCD              IntDefaultHandler ; Timer 0 sub
                                                            timer B
  127 00000094 00000000        DCD              IntDefaultHandler ; Timer 1 sub
                                                            timer A
  128 00000098 00000000        DCD              IntDefaultHandler ; Timer 1 sub
                                                            timer B
  129 0000009C 00000000        DCD              IntDefaultHandler ; Timer 2 sub



ARM Macro Assembler    Page 7 


                                                            timer A
  130 000000A0 00000000        DCD              IntDefaultHandler ; Timer 2 sub
                                                            timer B
  131 000000A4 00000000        DCD              IntDefaultHandler ; Analog Comp
                                                            arator 0
  132 000000A8 00000000        DCD              IntDefaultHandler ; Analog Comp
                                                            arator 1
  133 000000AC 00000000        DCD              IntDefaultHandler ; Analog Comp
                                                            arator 2
  134 000000B0 00000000        DCD              IntDefaultHandler ; System Cont
                                                            rol (PLL, OSC, BO)
  135 000000B4 00000000        DCD              IntDefaultHandler 
                                                            ; FLASH Control
  136 000000B8 00000000        DCD              IntDefaultHandler ; GPIO Port F
                                                            
  137 000000BC 00000000        DCD              IntDefaultHandler ; GPIO Port G
                                                            
  138 000000C0 00000000        DCD              IntDefaultHandler ; GPIO Port H
                                                            
  139 000000C4 00000000        DCD              IntDefaultHandler 
                                                            ; UART2 Rx and Tx
  140 000000C8 00000000        DCD              IntDefaultHandler 
                                                            ; SSI1 Rx and Tx
  141 000000CC 00000000        DCD              IntDefaultHandler ; Timer 3 sub
                                                            timer A
  142 000000D0 00000000        DCD              IntDefaultHandler ; Timer 3 sub
                                                            timer B
  143 000000D4 00000000        DCD              IntDefaultHandler ; I2C1 Master
                                                             and Slave
  144 000000D8 00000000        DCD              IntDefaultHandler ; Quadrature 
                                                            Encoder 1
  145 000000DC 00000000        DCD              IntDefaultHandler ; CAN0
  146 000000E0 00000000        DCD              IntDefaultHandler ; CAN1
  147 000000E4 00000000        DCD              0           ; Reserved
  148 000000E8 00000000        DCD              0           ; Reserved
  149 000000EC 00000000        DCD              IntDefaultHandler ; Hibernate
  150 000000F0 00000000        DCD              IntDefaultHandler ; USB0
  151 000000F4 00000000        DCD              IntDefaultHandler 
                                                            ; PWM Generator 3
  152 000000F8 00000000        DCD              IntDefaultHandler ; uDMA Softwa
                                                            re Transfer
  153 000000FC 00000000        DCD              IntDefaultHandler ; uDMA Error
  154 00000100 00000000        DCD              IntDefaultHandler 
                                                            ; ADC1 Sequence 0
  155 00000104 00000000        DCD              IntDefaultHandler 
                                                            ; ADC1 Sequence 1
  156 00000108 00000000        DCD              IntDefaultHandler 
                                                            ; ADC1 Sequence 2
  157 0000010C 00000000        DCD              IntDefaultHandler 
                                                            ; ADC1 Sequence 3
  158 00000110 00000000        DCD              0           ; Reserved
  159 00000114 00000000        DCD              0           ; Reserved
  160 00000118 00000000        DCD              IntDefaultHandler ; GPIO Port J
                                                            
  161 0000011C 00000000        DCD              IntDefaultHandler ; GPIO Port K
                                                            
  162 00000120 00000000        DCD              IntDefaultHandler ; GPIO Port L
                                                            
  163 00000124 00000000        DCD              IntDefaultHandler 



ARM Macro Assembler    Page 8 


                                                            ; SSI2 Rx and Tx
  164 00000128 00000000        DCD              IntDefaultHandler 
                                                            ; SSI3 Rx and Tx
  165 0000012C 00000000        DCD              IntDefaultHandler 
                                                            ; UART3 Rx and Tx
  166 00000130 00000000        DCD              IntDefaultHandler 
                                                            ; UART4 Rx and Tx
  167 00000134 00000000        DCD              IntDefaultHandler 
                                                            ; UART5 Rx and Tx
  168 00000138 00000000        DCD              IntDefaultHandler 
                                                            ; UART6 Rx and Tx
  169 0000013C 00000000        DCD              IntDefaultHandler 
                                                            ; UART7 Rx and Tx
  170 00000140 00000000        DCD              0           ; Reserved
  171 00000144 00000000        DCD              0           ; Reserved
  172 00000148 00000000        DCD              0           ; Reserved
  173 0000014C 00000000        DCD              0           ; Reserved
  174 00000150 00000000        DCD              IntDefaultHandler ; I2C2 Master
                                                             and Slave
  175 00000154 00000000        DCD              IntDefaultHandler ; I2C3 Master
                                                             and Slave
  176 00000158 00000000        DCD              Timer4A_Handler ; Timer 4 subti
                                                            mer A
  177 0000015C 00000000        DCD              Timer4B_Handler ; Timer 4 subti
                                                            mer B
  178 00000160 00000000        DCD              0           ; Reserved
  179 00000164 00000000        DCD              0           ; Reserved
  180 00000168 00000000        DCD              0           ; Reserved
  181 0000016C 00000000        DCD              0           ; Reserved
  182 00000170 00000000        DCD              0           ; Reserved
  183 00000174 00000000        DCD              0           ; Reserved
  184 00000178 00000000        DCD              0           ; Reserved
  185 0000017C 00000000        DCD              0           ; Reserved
  186 00000180 00000000        DCD              0           ; Reserved
  187 00000184 00000000        DCD              0           ; Reserved
  188 00000188 00000000        DCD              0           ; Reserved
  189 0000018C 00000000        DCD              0           ; Reserved
  190 00000190 00000000        DCD              0           ; Reserved
  191 00000194 00000000        DCD              0           ; Reserved
  192 00000198 00000000        DCD              0           ; Reserved
  193 0000019C 00000000        DCD              0           ; Reserved
  194 000001A0 00000000        DCD              0           ; Reserved
  195 000001A4 00000000        DCD              0           ; Reserved
  196 000001A8 00000000        DCD              0           ; Reserved
  197 000001AC 00000000        DCD              0           ; Reserved
  198 000001B0 00000000        DCD              IntDefaultHandler ; Timer 5 sub
                                                            timer A
  199 000001B4 00000000        DCD              IntDefaultHandler ; Timer 5 sub
                                                            timer B
  200 000001B8 00000000        DCD              IntDefaultHandler ; Wide Timer 
                                                            0 subtimer A
  201 000001BC 00000000        DCD              IntDefaultHandler ; Wide Timer 
                                                            0 subtimer B
  202 000001C0 00000000        DCD              IntDefaultHandler ; Wide Timer 
                                                            1 subtimer A
  203 000001C4 00000000        DCD              IntDefaultHandler ; Wide Timer 
                                                            1 subtimer B
  204 000001C8 00000000        DCD              IntDefaultHandler ; Wide Timer 
                                                            2 subtimer A



ARM Macro Assembler    Page 9 


  205 000001CC 00000000        DCD              IntDefaultHandler ; Wide Timer 
                                                            2 subtimer B
  206 000001D0 00000000        DCD              IntDefaultHandler ; Wide Timer 
                                                            3 subtimer A
  207 000001D4 00000000        DCD              IntDefaultHandler ; Wide Timer 
                                                            3 subtimer B
  208 000001D8 00000000        DCD              IntDefaultHandler ; Wide Timer 
                                                            4 subtimer A
  209 000001DC 00000000        DCD              IntDefaultHandler ; Wide Timer 
                                                            4 subtimer B
  210 000001E0 00000000        DCD              IntDefaultHandler ; Wide Timer 
                                                            5 subtimer A
  211 000001E4 00000000        DCD              IntDefaultHandler ; Wide Timer 
                                                            5 subtimer B
  212 000001E8 00000000        DCD              IntDefaultHandler ; FPU
  213 000001EC 00000000        DCD              0           ; Reserved
  214 000001F0 00000000        DCD              0           ; Reserved
  215 000001F4 00000000        DCD              IntDefaultHandler ; I2C4 Master
                                                             and Slave
  216 000001F8 00000000        DCD              IntDefaultHandler ; I2C5 Master
                                                             and Slave
  217 000001FC 00000000        DCD              IntDefaultHandler ; GPIO Port M
                                                            
  218 00000200 00000000        DCD              IntDefaultHandler ; GPIO Port N
                                                            
  219 00000204 00000000        DCD              IntDefaultHandler ; Quadrature 
                                                            Encoder 2
  220 00000208 00000000        DCD              0           ; Reserved
  221 0000020C 00000000        DCD              0           ; Reserved
  222 00000210 00000000        DCD              IntDefaultHandler ; GPIO Port P
                                                             (Summary or P0)
  223 00000214 00000000        DCD              IntDefaultHandler 
                                                            ; GPIO Port P1
  224 00000218 00000000        DCD              IntDefaultHandler 
                                                            ; GPIO Port P2
  225 0000021C 00000000        DCD              IntDefaultHandler 
                                                            ; GPIO Port P3
  226 00000220 00000000        DCD              IntDefaultHandler 
                                                            ; GPIO Port P4
  227 00000224 00000000        DCD              IntDefaultHandler 
                                                            ; GPIO Port P5
  228 00000228 00000000        DCD              IntDefaultHandler 
                                                            ; GPIO Port P6
  229 0000022C 00000000        DCD              IntDefaultHandler 
                                                            ; GPIO Port P7
  230 00000230 00000000        DCD              IntDefaultHandler ; GPIO Port Q
                                                             (Summary or Q0)
  231 00000234 00000000        DCD              IntDefaultHandler 
                                                            ; GPIO Port Q1
  232 00000238 00000000        DCD              IntDefaultHandler 
                                                            ; GPIO Port Q2
  233 0000023C 00000000        DCD              IntDefaultHandler 
                                                            ; GPIO Port Q3
  234 00000240 00000000        DCD              IntDefaultHandler 
                                                            ; GPIO Port Q4
  235 00000244 00000000        DCD              IntDefaultHandler 
                                                            ; GPIO Port Q5
  236 00000248 00000000        DCD              IntDefaultHandler 
                                                            ; GPIO Port Q6



ARM Macro Assembler    Page 10 


  237 0000024C 00000000        DCD              IntDefaultHandler 
                                                            ; GPIO Port Q7
  238 00000250 00000000        DCD              IntDefaultHandler ; GPIO Port R
                                                            
  239 00000254 00000000        DCD              IntDefaultHandler ; GPIO Port S
                                                            
  240 00000258 00000000        DCD              IntDefaultHandler 
                                                            ; PWM 1 Generator 0
                                                            
  241 0000025C 00000000        DCD              IntDefaultHandler 
                                                            ; PWM 1 Generator 1
                                                            
  242 00000260 00000000        DCD              IntDefaultHandler 
                                                            ; PWM 1 Generator 2
                                                            
  243 00000264 00000000        DCD              IntDefaultHandler 
                                                            ; PWM 1 Generator 3
                                                            
  244 00000268 00000000        DCD              IntDefaultHandler ; PWM 1 Fault
                                                            
  245 0000026C         
  246 0000026C         ;*******************************************************
                       ***********************
  247 0000026C         ;
  248 0000026C         ; This is the code that gets called when the processor f
                       irst starts execution
  249 0000026C         ; following a reset event.
  250 0000026C         ;
  251 0000026C         ;*******************************************************
                       ***********************
  252 0000026C                 EXPORT           Reset_Handler
  253 0000026C         Reset_Handler
  254 0000026C         ;
  255 0000026C         ; Enable the floating-point unit.  This must be done her
                       e to handle the
  256 0000026C         ; case where main() uses floating-point and the function
                        prologue saves
  257 0000026C         ; floating-point registers (which will fault if floating
                       -point is not
  258 0000026C         ; enabled).  Any configuration of the floating-point uni
                       t using
  259 0000026C         ; DriverLib APIs must be done here prior to the floating
                       -point unit
  260 0000026C         ; being enabled.
  261 0000026C         ;
  262 0000026C         ; Note that this does not use DriverLib since it might n
                       ot be included
  263 0000026C         ; in this project.
  264 0000026C         ;
  265 0000026C F64E 5088       MOVW             R0, #0xED88
  266 00000270 F2CE 0000       MOVT             R0, #0xE000
  267 00000274 6801            LDR              R1, [R0]
  268 00000276 F441 0170       ORR              R1, #0x00F00000
  269 0000027A 6001            STR              R1, [R0]
  270 0000027C         
  271 0000027C         ;
  272 0000027C         ; Call the C library enty point that handles startup.  T
                       his will copy
  273 0000027C         ; the .data section initializers from flash to SRAM and 



ARM Macro Assembler    Page 11 


                       zero fill the
  274 0000027C         ; .bss section.
  275 0000027C         ;
  276 0000027C         
  277 0000027C         
  278 0000027C         ;Setting up RAM myself here
  279 0000027C 4A22            LDR              r2, =PB5_MASK ;get RAM address 
                                                            of PB5 mask (pointe
                                                            r)
  280 0000027E 6813            LDR              r3,[r2]     ;get the value of P
                                                            B5 mask
  281 00000280         
  282 00000280         ;I'm getting trash data this RAM address. Clearing and p
                       roperly setting to ONLY 0xF0
  283 00000280 F36F 031F       BFC              r3,#0,#32
  284 00000284         
  285 00000284 F043 03F0       ORR              r3, r3, #0xF0
  286 00000288 6013            STR              r3,[r2]
  287 0000028A         
  288 0000028A                 IMPORT           __main
  289 0000028A F7FF BFFE       B                __main
  290 0000028E         
  291 0000028E         ;*******************************************************
                       ***********************
  292 0000028E         ;
  293 0000028E         ; This is the code that gets called when the processor r
                       eceives a NMI.  This
  294 0000028E         ; simply enters an infinite loop, preserving the system 
                       state for examination
  295 0000028E         ; by a debugger.
  296 0000028E         ;
  297 0000028E         ;*******************************************************
                       ***********************
  298 0000028E         NmiSR
  299 0000028E E7FE            B                NmiSR
  300 00000290         
  301 00000290         ;*******************************************************
                       ***********************
  302 00000290         ;
  303 00000290         ; This is the code that gets called when the processor r
                       eceives a fault
  304 00000290         ; interrupt.  This simply enters an infinite loop, prese
                       rving the system state
  305 00000290         ; for examination by a debugger.
  306 00000290         ;
  307 00000290         ;*******************************************************
                       ***********************
  308 00000290         FaultISR
  309 00000290 E7FE            B                FaultISR
  310 00000292         
  311 00000292         ;*******************************************************
                       ***********************
  312 00000292         ;
  313 00000292         ; This is the code that gets called when the processor r
                       eceives an unexpected
  314 00000292         ; interrupt.  This simply enters an infinite loop, prese
                       rving the system state
  315 00000292         ; for examination by a debugger.
  316 00000292         ;



ARM Macro Assembler    Page 12 


  317 00000292         ;*******************************************************
                       ***********************
  318 00000292         
  319 00000292         
  320 00000292         ;I added the SysTick_Handler here. This toggle GPIODATA 
                       so the LED blinks
  321 00000292         SysTick_Handler
                               PROC
  322 00000292         
  323 00000292                 EXPORT           SysTick_Handler
  324 00000292         
  325 00000292         ;write "high" to data register for port F pin 1 to turn 
                       on red LED. GPIODATA
  326 00000292 481E            LDR              r0, =AHB_PORTB
  327 00000294 491C            LDR              r1, =PB5_MASK ;Get RAM address 
                                                            of PB5 mask value
  328 00000296 680A            LDR              r2,[r1]     ;Grab value of PB5 
                                                            mask
  329 00000298 F082 02F0       EOR              r2, r2, #0xF0 ;Toggle mas to to
                                                            ggle PB5
  330 0000029C 600A            STR              r2,[r1]     ;Store the toggled 
                                                            mask to properly to
                                                            ggle next time
  331 0000029E F8C0 23FC       STR              r2,[r0,#GPIODATAPB5]
  332 000002A2         ;LDR r2,[r0,#GPIODATAPB5]
  333 000002A2         
  334 000002A2         ;return to __main
  335 000002A2 4770            BX               LR
  336 000002A4         
  337 000002A4                 ENDP
  338 000002A4         
  339 000002A4         
  340 000002A4         
  341 000002A4         IntDefaultHandler
  342 000002A4 E7FE            B                IntDefaultHandler
  343 000002A6         
  344 000002A6         
  345 000002A6         ;I added the Timer0A_Handler here. 
  346 000002A6         Timer0A_Handler
                               PROC
  347 000002A6         
  348 000002A6                 EXPORT           Timer0A_Handler
  349 000002A6         
  350 000002A6         ;write "high" to data register for port F pin 1 to turn 
                       on red LED. GPIODATA
  351 000002A6 4819            LDR              r0, =AHB_PORTB
  352 000002A8 4917            LDR              r1, =PB5_MASK ;Get RAM address 
                                                            of PB5 mask value
  353 000002AA 680A            LDR              r2,[r1]     ;Grab value of PB5 
                                                            mask
  354 000002AC F082 02F0       EOR              r2, r2, #0xF0 ;Toggle mas to to
                                                            ggle PB5
  355 000002B0 600A            STR              r2,[r1]     ;Store the toggled 
                                                            mask to properly to
                                                            ggle next time
  356 000002B2 F8C0 23FC       STR              r2,[r0,#GPIODATAPB5]
  357 000002B6         ;LDR r2,[r0,#GPIODATAPB5]
  358 000002B6         
  359 000002B6         



ARM Macro Assembler    Page 13 


  360 000002B6         ;Clear RIS bit
  361 000002B6 4816            LDR              r0, =TIMER16_0
  362 000002B8 6A41            LDR              r1,[r0, #GPTMICR]
  363 000002BA         
  364 000002BA F36F 0100       BFC              r1,#0,#1
  365 000002BE F041 0101       ORR              r1,r1,#1
  366 000002C2         
  367 000002C2 6241            STR              r1,[r0, #GPTMICR]
  368 000002C4         
  369 000002C4         ;return to __main
  370 000002C4 4770            BX               LR
  371 000002C6         
  372 000002C6                 ENDP
  373 000002C6         
  374 000002C6         Timer4A_Handler
                               PROC
  375 000002C6                 EXPORT           Timer4A_Handler
  376 000002C6         
  377 000002C6         ;write "high" to data register for port F pin 1 to turn 
                       on red LED. GPIODATA
  378 000002C6 4811            LDR              r0, =AHB_PORTB
  379 000002C8 490F            LDR              r1, =PB5_MASK ;Get RAM address 
                                                            of PB5 mask value
  380 000002CA 680A            LDR              r2,[r1]     ;Grab value of PB5 
                                                            mask
  381 000002CC F082 02F0       EOR              r2, r2, #0xF0 ;Toggle mas to to
                                                            ggle PB5
  382 000002D0 600A            STR              r2,[r1]     ;Store the toggled 
                                                            mask to properly to
                                                            ggle next time
  383 000002D2 F8C0 23FC       STR              r2,[r0,#GPIODATAPB5]
  384 000002D6         ;LDR r2,[r0,#GPIODATAPB5]
  385 000002D6         
  386 000002D6         
  387 000002D6         ;Clear RIS bit
  388 000002D6 480F            LDR              r0, =SYS_CONTROL
  389 000002D8 6A41            LDR              r1,[r0, #GPTMICR]
  390 000002DA         
  391 000002DA F36F 0100       BFC              r1,#0,#1
  392 000002DE F041 0101       ORR              r1,r1,#1
  393 000002E2         
  394 000002E2 6241            STR              r1,[r0, #GPTMICR]
  395 000002E4         
  396 000002E4         ;return to __main
  397 000002E4 4770            BX               LR
  398 000002E6         
  399 000002E6                 ENDP
  400 000002E6         
  401 000002E6         Timer4B_Handler
                               PROC
  402 000002E6                 EXPORT           Timer4B_Handler
  403 000002E6         
  404 000002E6         ;write "high" to data register for port F pin 1 to turn 
                       on red LED. GPIODATA
  405 000002E6 4809            LDR              r0, =AHB_PORTB
  406 000002E8 4907            LDR              r1, =PB5_MASK ;Get RAM address 
                                                            of PB5 mask value
  407 000002EA 680A            LDR              r2,[r1]     ;Grab value of PB5 
                                                            mask



ARM Macro Assembler    Page 14 


  408 000002EC F082 02F0       EOR              r2, r2, #0xF0 ;Toggle mas to to
                                                            ggle PB5
  409 000002F0 600A            STR              r2,[r1]     ;Store the toggled 
                                                            mask to properly to
                                                            ggle next time
  410 000002F2 F8C0 23FC       STR              r2,[r0,#GPIODATAPB5]
  411 000002F6         ;LDR r2,[r0,#GPIODATAPB5]
  412 000002F6         
  413 000002F6         
  414 000002F6         ;Clear RIS bit
  415 000002F6 4807            LDR              r0, =SYS_CONTROL
  416 000002F8 6A41            LDR              r1,[r0, #GPTMICR]
  417 000002FA         
  418 000002FA F36F 0100       BFC              r1,#0,#1
  419 000002FE F041 0101       ORR              r1,r1,#1
  420 00000302         
  421 00000302 6241            STR              r1,[r0, #GPTMICR]
  422 00000304         
  423 00000304         ;return to __main
  424 00000304 4770            BX               LR
  425 00000306         
  426 00000306                 ENDP
  427 00000306         
  428 00000306         ;*******************************************************
                       ***********************
  429 00000306         ;
  430 00000306         ; Make sure the end of this section is aligned.
  431 00000306         ;
  432 00000306         ;*******************************************************
                       ***********************
  433 00000306 00 00           ALIGN
  434 00000308         
  435 00000308         ;*******************************************************
                       ***********************
  436 00000308         ;
  437 00000308         ; Some code in the normal code section for initializing 
                       the heap and stack.
  438 00000308         ;
  439 00000308         ;*******************************************************
                       ***********************
  440 00000308 00000000 
              40059000 
              40030000 
              400FE000         AREA             |.text|, CODE, READONLY
  441 00000000         
  442 00000000         ;*******************************************************
                       ***********************
  443 00000000         ;
  444 00000000         ; The function expected of the C library startup code fo
                       r defining the stack
  445 00000000         ; and heap memory locations.  For the C library version 
                       of the startup code,
  446 00000000         ; provide this function so that the C library initializa
                       tion code can find out
  447 00000000         ; the location of the stack and heap.
  448 00000000         ;
  449 00000000         ;*******************************************************
                       ***********************
  450 00000000                 IF               :DEF: __MICROLIB



ARM Macro Assembler    Page 15 


  455 00000000                 IMPORT           __use_two_region_memory
  456 00000000                 EXPORT           __user_initial_stackheap
  457 00000000         __user_initial_stackheap
  458 00000000 4802            LDR              R0, =HeapMem
  459 00000002 4903            LDR              R1, =(StackMem + Stack)
  460 00000004 4A01            LDR              R2, =(HeapMem + Heap)
  461 00000006 4B03            LDR              R3, =StackMem
  462 00000008 4770            BX               LR
  463 0000000A                 ENDIF
  464 0000000A         
  465 0000000A         ;*******************************************************
                       ***********************
  466 0000000A         ;
  467 0000000A         ; Make sure the end of this section is aligned.
  468 0000000A         ;
  469 0000000A         ;*******************************************************
                       ***********************
  470 0000000A 00 00           ALIGN
  471 0000000C         
  472 0000000C         ;*******************************************************
                       ***********************
  473 0000000C         ;
  474 0000000C         ; Tell the assembler that we're done.
  475 0000000C         ;
  476 0000000C         ;*******************************************************
                       ***********************
  477 0000000C                 END
              00000000 
              00000200 
              00000000 
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M4.fp --apcs=int
erwork --depend=.\objects\startup_rvmdk.d -o.\objects\startup_rvmdk.o -IC:\ti\T
ivaWare_C_Series-2.1.4.178\examples\boards\my_projects\project4\RTE -IC:\Keil_v
5\ARM\PACK\Keil\TM4C_DFP\1.1.0\Device\Include\TM4C123 -IC:\Keil_v5\ARM\CMSIS\In
clude --predefine="__EVAL SETA 1" --predefine="__UVISION_VERSION SETA 521" --pr
edefine="TM4C123GH6PM SETA 1" --list=.\listings\startup_rvmdk.lst startup_rvmdk
.S



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

FAIL 00000004

Symbol: FAIL
   Definitions
      At line 75 in file my_Constants.s
   Uses
      None
Comment: FAIL unused
My_Constants 00000000

Symbol: My_Constants
   Definitions
      At line 1 in file my_Constants.s
   Uses
      None
Comment: My_Constants unused
SIZE 00000000

Symbol: SIZE
   Definitions
      At line 73 in file my_Constants.s
   Uses
      None
Comment: SIZE unused
SUCCESS 00000002

Symbol: SUCCESS
   Definitions
      At line 74 in file my_Constants.s
   Uses
      None
Comment: SUCCESS unused
4 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

STACK 00000000

Symbol: STACK
   Definitions
      At line 52 in file startup_rvmdk.S
   Uses
      None
Comment: STACK unused
StackMem 00000000

Symbol: StackMem
   Definitions
      At line 53 in file startup_rvmdk.S
   Uses
      At line 90 in file startup_rvmdk.S
      At line 459 in file startup_rvmdk.S
      At line 461 in file startup_rvmdk.S

__initial_sp 00000200

Symbol: __initial_sp
   Definitions
      At line 55 in file startup_rvmdk.S
   Uses
      None
Comment: __initial_sp unused
3 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

HEAP 00000000

Symbol: HEAP
   Definitions
      At line 62 in file startup_rvmdk.S
   Uses
      None
Comment: HEAP unused
HeapMem 00000000

Symbol: HeapMem
   Definitions
      At line 64 in file startup_rvmdk.S
   Uses
      At line 458 in file startup_rvmdk.S
      At line 460 in file startup_rvmdk.S

__heap_base 00000000

Symbol: __heap_base
   Definitions
      At line 63 in file startup_rvmdk.S
   Uses
      None
Comment: __heap_base unused
__heap_limit 00000000

Symbol: __heap_limit
   Definitions
      At line 66 in file startup_rvmdk.S
   Uses
      None
Comment: __heap_limit unused
4 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

FaultISR 00000290

Symbol: FaultISR
   Definitions
      At line 308 in file startup_rvmdk.S
   Uses
      At line 93 in file startup_rvmdk.S
      At line 309 in file startup_rvmdk.S

IntDefaultHandler 000002A4

Symbol: IntDefaultHandler
   Definitions
      At line 341 in file startup_rvmdk.S
   Uses
      At line 94 in file startup_rvmdk.S
      At line 95 in file startup_rvmdk.S
      At line 96 in file startup_rvmdk.S
      At line 101 in file startup_rvmdk.S
      At line 102 in file startup_rvmdk.S
      At line 104 in file startup_rvmdk.S
      At line 106 in file startup_rvmdk.S
      At line 107 in file startup_rvmdk.S
      At line 108 in file startup_rvmdk.S
      At line 109 in file startup_rvmdk.S
      At line 110 in file startup_rvmdk.S
      At line 111 in file startup_rvmdk.S
      At line 112 in file startup_rvmdk.S
      At line 113 in file startup_rvmdk.S
      At line 114 in file startup_rvmdk.S
      At line 115 in file startup_rvmdk.S
      At line 116 in file startup_rvmdk.S
      At line 117 in file startup_rvmdk.S
      At line 118 in file startup_rvmdk.S
      At line 119 in file startup_rvmdk.S
      At line 120 in file startup_rvmdk.S
      At line 121 in file startup_rvmdk.S
      At line 122 in file startup_rvmdk.S
      At line 123 in file startup_rvmdk.S
      At line 124 in file startup_rvmdk.S
      At line 126 in file startup_rvmdk.S
      At line 127 in file startup_rvmdk.S
      At line 128 in file startup_rvmdk.S
      At line 129 in file startup_rvmdk.S
      At line 130 in file startup_rvmdk.S
      At line 131 in file startup_rvmdk.S
      At line 132 in file startup_rvmdk.S
      At line 133 in file startup_rvmdk.S
      At line 134 in file startup_rvmdk.S
      At line 135 in file startup_rvmdk.S
      At line 136 in file startup_rvmdk.S
      At line 137 in file startup_rvmdk.S
      At line 138 in file startup_rvmdk.S
      At line 139 in file startup_rvmdk.S
      At line 140 in file startup_rvmdk.S
      At line 141 in file startup_rvmdk.S
      At line 142 in file startup_rvmdk.S
      At line 143 in file startup_rvmdk.S
      At line 144 in file startup_rvmdk.S



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

      At line 145 in file startup_rvmdk.S
      At line 146 in file startup_rvmdk.S
      At line 149 in file startup_rvmdk.S
      At line 150 in file startup_rvmdk.S
      At line 151 in file startup_rvmdk.S
      At line 152 in file startup_rvmdk.S
      At line 153 in file startup_rvmdk.S
      At line 154 in file startup_rvmdk.S
      At line 155 in file startup_rvmdk.S
      At line 156 in file startup_rvmdk.S
      At line 157 in file startup_rvmdk.S
      At line 160 in file startup_rvmdk.S
      At line 161 in file startup_rvmdk.S
      At line 162 in file startup_rvmdk.S
      At line 163 in file startup_rvmdk.S
      At line 164 in file startup_rvmdk.S
      At line 165 in file startup_rvmdk.S
      At line 166 in file startup_rvmdk.S
      At line 167 in file startup_rvmdk.S
      At line 168 in file startup_rvmdk.S
      At line 169 in file startup_rvmdk.S
      At line 174 in file startup_rvmdk.S
      At line 175 in file startup_rvmdk.S
      At line 198 in file startup_rvmdk.S
      At line 199 in file startup_rvmdk.S
      At line 200 in file startup_rvmdk.S
      At line 201 in file startup_rvmdk.S
      At line 202 in file startup_rvmdk.S
      At line 203 in file startup_rvmdk.S
      At line 204 in file startup_rvmdk.S
      At line 205 in file startup_rvmdk.S
      At line 206 in file startup_rvmdk.S
      At line 207 in file startup_rvmdk.S
      At line 208 in file startup_rvmdk.S
      At line 209 in file startup_rvmdk.S
      At line 210 in file startup_rvmdk.S
      At line 211 in file startup_rvmdk.S
      At line 212 in file startup_rvmdk.S
      At line 215 in file startup_rvmdk.S
      At line 216 in file startup_rvmdk.S
      At line 217 in file startup_rvmdk.S
      At line 218 in file startup_rvmdk.S
      At line 219 in file startup_rvmdk.S
      At line 222 in file startup_rvmdk.S
      At line 223 in file startup_rvmdk.S
      At line 224 in file startup_rvmdk.S
      At line 225 in file startup_rvmdk.S
      At line 226 in file startup_rvmdk.S
      At line 227 in file startup_rvmdk.S
      At line 228 in file startup_rvmdk.S
      At line 229 in file startup_rvmdk.S
      At line 230 in file startup_rvmdk.S
      At line 231 in file startup_rvmdk.S
      At line 232 in file startup_rvmdk.S
      At line 233 in file startup_rvmdk.S
      At line 234 in file startup_rvmdk.S
      At line 235 in file startup_rvmdk.S
      At line 236 in file startup_rvmdk.S
      At line 237 in file startup_rvmdk.S



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Relocatable symbols

      At line 238 in file startup_rvmdk.S
      At line 239 in file startup_rvmdk.S
      At line 240 in file startup_rvmdk.S
      At line 241 in file startup_rvmdk.S
      At line 242 in file startup_rvmdk.S
      At line 243 in file startup_rvmdk.S
      At line 244 in file startup_rvmdk.S
      At line 342 in file startup_rvmdk.S

NmiSR 0000028E

Symbol: NmiSR
   Definitions
      At line 298 in file startup_rvmdk.S
   Uses
      At line 92 in file startup_rvmdk.S
      At line 299 in file startup_rvmdk.S

RESET 00000000

Symbol: RESET
   Definitions
      At line 80 in file startup_rvmdk.S
   Uses
      None
Comment: RESET unused
Reset_Handler 0000026C

Symbol: Reset_Handler
   Definitions
      At line 253 in file startup_rvmdk.S
   Uses
      At line 91 in file startup_rvmdk.S
      At line 252 in file startup_rvmdk.S

SysTick_Handler 00000292

Symbol: SysTick_Handler
   Definitions
      At line 321 in file startup_rvmdk.S
   Uses
      At line 105 in file startup_rvmdk.S
      At line 323 in file startup_rvmdk.S

Timer0A_Handler 000002A6

Symbol: Timer0A_Handler
   Definitions
      At line 346 in file startup_rvmdk.S
   Uses
      At line 125 in file startup_rvmdk.S
      At line 348 in file startup_rvmdk.S

Timer4A_Handler 000002C6

Symbol: Timer4A_Handler
   Definitions
      At line 374 in file startup_rvmdk.S
   Uses



ARM Macro Assembler    Page 4 Alphabetic symbol ordering
Relocatable symbols

      At line 176 in file startup_rvmdk.S
      At line 375 in file startup_rvmdk.S

Timer4B_Handler 000002E6

Symbol: Timer4B_Handler
   Definitions
      At line 401 in file startup_rvmdk.S
   Uses
      At line 177 in file startup_rvmdk.S
      At line 402 in file startup_rvmdk.S

__Vectors 00000000

Symbol: __Vectors
   Definitions
      At line 89 in file startup_rvmdk.S
   Uses
      At line 88 in file startup_rvmdk.S
Comment: __Vectors used once
10 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 440 in file startup_rvmdk.S
   Uses
      None
Comment: .text unused
__user_initial_stackheap 00000000

Symbol: __user_initial_stackheap
   Definitions
      At line 457 in file startup_rvmdk.S
   Uses
      At line 456 in file startup_rvmdk.S
Comment: __user_initial_stackheap used once
2 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

AHB_PORTA 40058000

Symbol: AHB_PORTA
   Definitions
      At line 8 in file my_Constants.s
   Uses
      None
Comment: AHB_PORTA unused
AHB_PORTB 40059000

Symbol: AHB_PORTB
   Definitions
      At line 7 in file my_Constants.s
   Uses
      At line 326 in file startup_rvmdk.S
      At line 351 in file startup_rvmdk.S
      At line 378 in file startup_rvmdk.S
      At line 405 in file startup_rvmdk.S

GPIOAFSEL 00000420

Symbol: GPIOAFSEL
   Definitions
      At line 24 in file my_Constants.s
   Uses
      None
Comment: GPIOAFSEL unused
GPIOCTL 0000052C

Symbol: GPIOCTL
   Definitions
      At line 22 in file my_Constants.s
   Uses
      None
Comment: GPIOCTL unused
GPIODATAPB5 000003FC

Symbol: GPIODATAPB5
   Definitions
      At line 29 in file my_Constants.s
   Uses
      At line 331 in file startup_rvmdk.S
      At line 356 in file startup_rvmdk.S
      At line 383 in file startup_rvmdk.S
      At line 410 in file startup_rvmdk.S

GPIODEN 0000051C

Symbol: GPIODEN
   Definitions
      At line 27 in file my_Constants.s
   Uses
      None
Comment: GPIODEN unused
GPIODIR 00000400

Symbol: GPIODIR
   Definitions
      At line 23 in file my_Constants.s



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols

   Uses
      None
Comment: GPIODIR unused
GPIODR2R 00000500

Symbol: GPIODR2R
   Definitions
      At line 25 in file my_Constants.s
   Uses
      None
Comment: GPIODR2R unused
GPIOHBCTL 0000006C

Symbol: GPIOHBCTL
   Definitions
      At line 21 in file my_Constants.s
   Uses
      None
Comment: GPIOHBCTL unused
GPIOPCTL 0000052C

Symbol: GPIOPCTL
   Definitions
      At line 28 in file my_Constants.s
   Uses
      None
Comment: GPIOPCTL unused
GPIOPUR 00000510

Symbol: GPIOPUR
   Definitions
      At line 26 in file my_Constants.s
   Uses
      None
Comment: GPIOPUR unused
GPTMCFG 00000000

Symbol: GPTMCFG
   Definitions
      At line 41 in file my_Constants.s
   Uses
      None
Comment: GPTMCFG unused
GPTMCTL 0000000C

Symbol: GPTMCTL
   Definitions
      At line 40 in file my_Constants.s
   Uses
      None
Comment: GPTMCTL unused
GPTMICR 00000024

Symbol: GPTMICR
   Definitions
      At line 50 in file my_Constants.s
   Uses
      At line 362 in file startup_rvmdk.S
      At line 367 in file startup_rvmdk.S



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Absolute symbols

      At line 389 in file startup_rvmdk.S
      At line 394 in file startup_rvmdk.S
      At line 416 in file startup_rvmdk.S
      At line 421 in file startup_rvmdk.S

GPTMIMR 00000018

Symbol: GPTMIMR
   Definitions
      At line 48 in file my_Constants.s
   Uses
      None
Comment: GPTMIMR unused
GPTMMIS 00000020

Symbol: GPTMMIS
   Definitions
      At line 55 in file my_Constants.s
   Uses
      None
Comment: GPTMMIS unused
GPTMRIS 0000001C

Symbol: GPTMRIS
   Definitions
      At line 49 in file my_Constants.s
   Uses
      None
Comment: GPTMRIS unused
GPTMTAILR 00000028

Symbol: GPTMTAILR
   Definitions
      At line 44 in file my_Constants.s
   Uses
      None
Comment: GPTMTAILR unused
GPTMTAMR 00000004

Symbol: GPTMTAMR
   Definitions
      At line 42 in file my_Constants.s
   Uses
      None
Comment: GPTMTAMR unused
GPTMTAPR 00000038

Symbol: GPTMTAPR
   Definitions
      At line 46 in file my_Constants.s
   Uses
      None
Comment: GPTMTAPR unused
GPTMTAR 00000048

Symbol: GPTMTAR
   Definitions
      At line 53 in file my_Constants.s
   Uses



ARM Macro Assembler    Page 4 Alphabetic symbol ordering
Absolute symbols

      None
Comment: GPTMTAR unused
GPTMTAV 00000050

Symbol: GPTMTAV
   Definitions
      At line 51 in file my_Constants.s
   Uses
      None
Comment: GPTMTAV unused
GPTMTBILR 0000002C

Symbol: GPTMTBILR
   Definitions
      At line 45 in file my_Constants.s
   Uses
      None
Comment: GPTMTBILR unused
GPTMTBMR 00000008

Symbol: GPTMTBMR
   Definitions
      At line 43 in file my_Constants.s
   Uses
      None
Comment: GPTMTBMR unused
GPTMTBPR 0000003C

Symbol: GPTMTBPR
   Definitions
      At line 47 in file my_Constants.s
   Uses
      None
Comment: GPTMTBPR unused
GPTMTBR 0000004C

Symbol: GPTMTBR
   Definitions
      At line 54 in file my_Constants.s
   Uses
      None
Comment: GPTMTBR unused
GPTMTBV 00000054

Symbol: GPTMTBV
   Definitions
      At line 52 in file my_Constants.s
   Uses
      None
Comment: GPTMTBV unused
Heap 00000000

Symbol: Heap
   Definitions
      At line 38 in file startup_rvmdk.S
   Uses
      At line 65 in file startup_rvmdk.S
      At line 460 in file startup_rvmdk.S




ARM Macro Assembler    Page 5 Alphabetic symbol ordering
Absolute symbols

NVIC_DISn 00000180

Symbol: NVIC_DISn
   Definitions
      At line 37 in file my_Constants.s
   Uses
      None
Comment: NVIC_DISn unused
NVIC_ENn 00000100

Symbol: NVIC_ENn
   Definitions
      At line 36 in file my_Constants.s
   Uses
      None
Comment: NVIC_ENn unused
NVIC_PRIn 00000440

Symbol: NVIC_PRIn
   Definitions
      At line 38 in file my_Constants.s
   Uses
      None
Comment: NVIC_PRIn unused
RCGCGPIO 00000608

Symbol: RCGCGPIO
   Definitions
      At line 17 in file my_Constants.s
   Uses
      None
Comment: RCGCGPIO unused
RCGCTIMER 00000604

Symbol: RCGCTIMER
   Definitions
      At line 18 in file my_Constants.s
   Uses
      None
Comment: RCGCTIMER unused
RCGCUART 00000618

Symbol: RCGCUART
   Definitions
      At line 19 in file my_Constants.s
   Uses
      None
Comment: RCGCUART unused
STCTRL 00000010

Symbol: STCTRL
   Definitions
      At line 31 in file my_Constants.s
   Uses
      None
Comment: STCTRL unused
STCURRENT 00000018

Symbol: STCURRENT



ARM Macro Assembler    Page 6 Alphabetic symbol ordering
Absolute symbols

   Definitions
      At line 33 in file my_Constants.s
   Uses
      None
Comment: STCURRENT unused
STRELOAD 00000014

Symbol: STRELOAD
   Definitions
      At line 32 in file my_Constants.s
   Uses
      None
Comment: STRELOAD unused
SYSPRI3 00000D20

Symbol: SYSPRI3
   Definitions
      At line 34 in file my_Constants.s
   Uses
      None
Comment: SYSPRI3 unused
SYS_CONTROL 400FE000

Symbol: SYS_CONTROL
   Definitions
      At line 9 in file my_Constants.s
   Uses
      At line 388 in file startup_rvmdk.S
      At line 415 in file startup_rvmdk.S

SYS_PERIPH E000E000

Symbol: SYS_PERIPH
   Definitions
      At line 10 in file my_Constants.s
   Uses
      None
Comment: SYS_PERIPH unused
Stack 00000200

Symbol: Stack
   Definitions
      At line 31 in file startup_rvmdk.S
   Uses
      At line 54 in file startup_rvmdk.S
      At line 90 in file startup_rvmdk.S
      At line 459 in file startup_rvmdk.S

TIMER16_0 40030000

Symbol: TIMER16_0
   Definitions
      At line 11 in file my_Constants.s
   Uses
      At line 361 in file startup_rvmdk.S
Comment: TIMER16_0 used once
TIMER16_4 40034000

Symbol: TIMER16_4



ARM Macro Assembler    Page 7 Alphabetic symbol ordering
Absolute symbols

   Definitions
      At line 12 in file my_Constants.s
   Uses
      None
Comment: TIMER16_4 unused
UART0 4000C000

Symbol: UART0
   Definitions
      At line 13 in file my_Constants.s
   Uses
      None
Comment: UART0 unused
UARTCC 00000FC8

Symbol: UARTCC
   Definitions
      At line 57 in file my_Constants.s
   Uses
      None
Comment: UARTCC unused
UARTCTL 00000030

Symbol: UARTCTL
   Definitions
      At line 58 in file my_Constants.s
   Uses
      None
Comment: UARTCTL unused
UARTDR 00000000

Symbol: UARTDR
   Definitions
      At line 69 in file my_Constants.s
   Uses
      None
Comment: UARTDR unused
UARTFBRD 00000028

Symbol: UARTFBRD
   Definitions
      At line 60 in file my_Constants.s
   Uses
      None
Comment: UARTFBRD unused
UARTFR 00000018

Symbol: UARTFR
   Definitions
      At line 62 in file my_Constants.s
   Uses
      None
Comment: UARTFR unused
UARTIBRD 00000024

Symbol: UARTIBRD
   Definitions
      At line 59 in file my_Constants.s
   Uses



ARM Macro Assembler    Page 8 Alphabetic symbol ordering
Absolute symbols

      None
Comment: UARTIBRD unused
UARTICR 00000044

Symbol: UARTICR
   Definitions
      At line 68 in file my_Constants.s
   Uses
      None
Comment: UARTICR unused
UARTIFLS 00000034

Symbol: UARTIFLS
   Definitions
      At line 64 in file my_Constants.s
   Uses
      None
Comment: UARTIFLS unused
UARTIM 00000038

Symbol: UARTIM
   Definitions
      At line 66 in file my_Constants.s
   Uses
      None
Comment: UARTIM unused
UARTLCRH 0000002C

Symbol: UARTLCRH
   Definitions
      At line 61 in file my_Constants.s
   Uses
      None
Comment: UARTLCRH unused
UARTMIS 00000040

Symbol: UARTMIS
   Definitions
      At line 67 in file my_Constants.s
   Uses
      None
Comment: UARTMIS unused
UARTRIS 0000003C

Symbol: UARTRIS
   Definitions
      At line 65 in file my_Constants.s
   Uses
      None
Comment: UARTRIS unused
UARTRSR 00000004

Symbol: UARTRSR
   Definitions
      At line 63 in file my_Constants.s
   Uses
      None
Comment: UARTRSR unused
57 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

PB5_MASK 00000000

Symbol: PB5_MASK
   Definitions
      At line 50 in file startup_rvmdk.S
   Uses
      At line 279 in file startup_rvmdk.S
      At line 327 in file startup_rvmdk.S
      At line 352 in file startup_rvmdk.S
      At line 379 in file startup_rvmdk.S
      At line 406 in file startup_rvmdk.S

__main 00000000

Symbol: __main
   Definitions
      At line 288 in file startup_rvmdk.S
   Uses
      At line 289 in file startup_rvmdk.S
Comment: __main used once
__use_two_region_memory 00000000

Symbol: __use_two_region_memory
   Definitions
      At line 455 in file startup_rvmdk.S
   Uses
      None
Comment: __use_two_region_memory unused
3 symbols
423 symbols in table
